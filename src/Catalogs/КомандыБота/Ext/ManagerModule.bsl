
Процедура ОбработатьКоманду(Команда, chat_id, client_id)  Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 50
		|	КомандыПользователей.chat_id КАК chat_id,
		|	КомандыПользователей.Команда КАК Команда,
		|	КомандыПользователей.Выполнено КАК Выполнено,
		|	КомандыПользователей.ТекстСообщения КАК ТекстСообщения,
		|	КомандыПользователей.client_id КАК client_id,
		|	КомандыПользователей.date КАК date,
		|	КомандыПользователей.next_id КАК next_id,
		|	КомандыБотаСписокВопросов.Реквизит КАК Реквизит,
		|	КомандыПользователей.Команда.Документ КАК Документ
		|ИЗ
		|	РегистрСведений.КомандыПользователей КАК КомандыПользователей
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КомандыБота.СписокВопросов КАК КомандыБотаСписокВопросов
		|		ПО КомандыПользователей.Команда = КомандыБотаСписокВопросов.Ссылка
		|			И КомандыПользователей.next_id = КомандыБотаСписокВопросов.НомерСтроки
		|ГДЕ
		|	КомандыПользователей.chat_id <= &chat_id
		|	И КомандыПользователей.client_id = &client_id
		|	И КомандыПользователей.Команда = &Команда
		|
		|УПОРЯДОЧИТЬ ПО
		|	chat_id УБЫВ";
	
	Запрос.УстановитьПараметр("chat_id", chat_id);
	Запрос.УстановитьПараметр("client_id", client_id);
	Запрос.УстановитьПараметр("Команда", Команда);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ЗначениеРеквизитов = Новый Соответствие;
	ИмяОбъекта = "";
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ВыборкаДетальныеЗаписи.next_id = 0 тогда
			ИмяОбъекта = ВыборкаДетальныеЗаписи.Документ;
			прервать
		конецесли;	
		ЗначениеРеквизитов.Вставить(ВыборкаДетальныеЗаписи.Реквизит, ВыборкаДетальныеЗаписи.ТекстСообщения);
				
	КонецЦикла;
	
	СоздатьОбъект(ИмяОбъекта, ЗначениеРеквизитов,client_id);
	
КонецПроцедуры


Процедура СоздатьОбъект(ИмяОбъекта, ЗначениеРеквизитов,client_id);
	
	НовыйОбъект = Неопределено;
	
	Если Найти(ИмяОбъекта, "Документ") Тогда
		Выполнить("НовыйОбъект = " + ИмяОбъекта + ".СоздатьДокумент()");
		НовыйОбъект.Дата = ТекущаяДата();
		НовыйОбъект.Клиент = НайтиКлиентаПоИД(client_id);
		НовыйОбъект.Статус = Перечисления.СтатусыЗаказов.Принят;
	Иначе
		Выполнить("НовыйОбъект = " + ИмяОбъекта + ".СоздатьЭлемент()");
		НовыйОбъект.client_id = client_id;
	КонецЕсли;
	
		
	Для Каждого ЗначениеР Из ЗначениеРеквизитов Цикл
		Если ТипЗнч(НовыйОбъект[ЗначениеР.Ключ]) <> ТипЗнч(ЗначениеР.Значение) тогда
			втЗначение = СоздатьСправочник(ЗначениеР.Ключ,ЗначениеР.Значение,client_id);
			Выполнить("НовыйОбъект." + ЗначениеР.Ключ + " = втЗначение");
		иначе
			Выполнить("НовыйОбъект." + ЗначениеР.Ключ + " = """ + ЗначениеР.Значение + """");
		конецесли;	
		
		
	КонецЦикла;
	
	Если Найти(ИмяОбъекта, "Документ") Тогда
		НовыйОбъект.Записать(РежимЗаписиДокумента.Проведение);
	иначе
		НовыйОбъект.Записать();
	конецесли;
	                                               
КонецПроцедуры

Функция НайтиКлиентаПоИД(client_id)
	запрос = новый запрос;
	запрос.Текст = "ВЫБРАТЬ
	               |	Клиенты.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.Клиенты КАК Клиенты
	               |ГДЕ
	               |	Клиенты.client_id = &client_id";
	запрос.УстановитьПараметр("client_id",client_id);
	выборка = запрос.Выполнить().Выбрать();
	выборка.Следующий();
	возврат выборка.ссылка
конецфункции	

Функция СоздатьСправочник(Имя,Значение,client_id)
	Поиск = Справочники[Имя+"ы"].НайтиПоНаименованию(Значение);
	Если ЗначениеЗаполнено(Поиск) тогда
		возврат Поиск
	иначе
		НовыйСпр = Справочники[Имя+"ы"].СоздатьЭлемент();
		НовыйСпр.Наименование = Значение;
		НовыйСпр.client_id = client_id;
		НовыйСпр.Записать();
		возврат НовыйСпр.ссылка 
	конецесли;	
конецфункции	