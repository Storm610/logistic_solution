
&НаСервере
Функция ПолучитьПрокси()
	ПроксиСервер = Новый ИнтернетПрокси;
	прПользователь = "JarovHuilo";
	прПароль = "xxQIlOmtkNrmjpm2";
	ПроксиСервер.Установить("https", "socks5://159.69.112.222",2007,прПользователь,прПароль);
	возврат ПроксиСервер
конецфункции	

&НаСервере
Функция ПолучитьТокенБота()
	возврат Константы.BotToken.Получить()
конецфункции

&НаСервере
Функция ПолучитьСерверТелеграм()
	возврат Константы.TelegramServer.Получить()
конецфункции

&НаСервере
Функция ПолучитьПодсленийID()
	запрос = новый запрос;
	запрос.Текст = "ВЫБРАТЬ
	               |	КомандыПользователей.chat_id КАК chat_id
	               |ИЗ
	               |	РегистрСведений.КомандыПользователей КАК КомандыПользователей
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	КомандыПользователей.chat_id УБЫВ";
	выборка = запрос.Выполнить().Выбрать();
	Если выборка.Следующий() тогда
		возврат выборка.chat_id
	иначе
		возврат неопределено
	конецесли;	
конецфункции	

&НаСервере
Процедура ПолучитьСообщенияНаСервере()
	Последний = ПолучитьПодсленийID() + 1;
	Ресурс = "bot" + ПолучитьТокенБота() + "/getUpdates";
	Если ЗначениеЗаполнено(Последний) тогда
		Ресурс = Ресурс + "?offset=" + Формат(Последний, "ЧГ=");
	конецесли;	
	Соединение  =  Новый HTTPСоединение(ПолучитьСерверТелеграм(),443,,,ПолучитьПрокси(),10,Новый ЗащищенноеСоединениеOpenSSL());	
	Запрос = Новый HTTPЗапрос(Ресурс);
	
	Ответ = Соединение.Получить(Запрос);
	ДвоичныеДанныеОтвета = Ответ.ПолучитьТелоКакДвоичныеДанные();
		
	ПрочитатьДвоичныеДанныеОтвета(ДвоичныеДанныеОтвета);
	
КонецПроцедуры

&НаСервере                                                                                                    
Процедура ПрочитатьДвоичныеДанныеОтвета(ДвоичныеДанныеОтвета)
	
	ИмяФайла = ПолучитьИмяВременногоФайла("tgm");
	ДвоичныеДанныеОтвета.Записать(ИмяФайла);
	
	ДеревоЗн = Новый ДеревоЗначений();
	
	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.ОткрытьФайл(ИмяФайла);
	
	СформироватьДерево(ДеревоЗн, ДеревоЗн, ЧтениеJSON);
	
	ЧтениеJSON.Закрыть();
	
	ЗаполнитьРС(ДеревоЗн);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРС(ДеревоЗн)
	
	Для Каждого СтрОк Из ДеревоЗн.Строки Цикл//"Ок"
		
		Для Каждого СтрНов Из СтрОк.Строки Цикл//
			Для Каждого СтрАп Из СтрНов.Строки Цикл//update_id
				Для Каждого СтрМесс Из СтрАп.Строки Цикл//message_id
					date = СтрМесс.date;
					
										
					
					Для Каждого СтрИнфо Из СтрМесс.Строки Цикл//message_id
						ТекстСообщения = ?(ЗначениеЗаполнено(СтрМесс.text),СокрЛП(СтрМесс.text),СтрМесс.data);
						сКоманда = ТекстСообщения;
						Если Найти(сКоманда,"/takeorder") <> 0 тогда
							сКоманда = "/takeorder";
							ТекстСообщения = СтрЗаменить(ТекстСообщения,"/takeorder","");
						иначеесли Найти(сКоманда,"/closeorder") <> 0 тогда
							сКоманда = "/closeorder";
							ТекстСообщения = СтрЗаменить(ТекстСообщения,"/closeorder","");
						иначеесли Найти(сКоманда,"/denyorder") <> 0 тогда
							сКоманда = "/denyorder";
							ТекстСообщения = СтрЗаменить(ТекстСообщения,"/denyorder","");
						иначеесли Найти(сКоманда,"/report") <> 0 тогда
							сКоманда = "/report";
							ТекстСообщения = СтрЗаменить(ТекстСообщения,"/report","");	
						иначеесли Найти(сКоманда,"/start") <> 0 тогда
							сКоманда = "/help";								
						конецесли;
						Запрос = новый запрос;
						запрос.Текст = "ВЫБРАТЬ
						|	КомандыБота.Ссылка КАК Ссылка
						|ИЗ
						|	Справочник.КомандыБота КАК КомандыБота
						|ГДЕ
						|	КомандыБота.TelComand = &TelComand";
						запрос.УстановитьПараметр("TelComand",сКоманда);
						выборка = запрос.Выполнить().Выбрать();
						Если выборка.Следующий() тогда
							Команда = выборка.ссылка;
						иначе
							Команда = Справочники.КомандыБота.ПустаяСсылка();
						конецесли;
						РС = РегистрыСведений.КомандыПользователей.СоздатьНаборЗаписей();
						РС.Отбор.chat_id.Установить(СтрАп.update_id);
						//РС.Отбор.date.Установить(date);
						РС.Прочитать();
						Если РС.Количество() = 0 Тогда
							
							РСЗ = РегистрыСведений.КомандыПользователей.СоздатьМенеджерЗаписи();
							РСЗ.chat_id = СтрАп.update_id;
							РСЗ.client_id = СтрИнфо.id;
							РСЗ.date = дата(1970,1,1,1,0,0) + ?(date=неопределено,0,date);
							РСЗ.ТекстСообщения = ТекстСообщения;
							РСЗ.Команда = Команда;
							Если ЗначениеЗаполнено(РСЗ.Команда) тогда
								РСЗ.next_id = 0;								
							конецесли;
							РСЗ.Выполнено = ВыполнитьКомандуБота(РСЗ);
							//РСЗ.Записать();
						конецесли;
					конеццикла;
					
											
					
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
	КонецЦикла
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьКомандуБота(РСЗ)
	Если НЕ ЗначениеЗаполнено(РСЗ.Команда) тогда
		запрос = новый запрос;
		запрос.Текст = "ВЫБРАТЬ
		             |	КомандыПользователей.Команда КАК Команда,
		             |	КомандыПользователей.next_id КАК next_id
		             |ИЗ
		             |	РегистрСведений.КомандыПользователей КАК КомандыПользователей
		             |ГДЕ
		             |	КомандыПользователей.client_id = &client_id
		             |
		             |УПОРЯДОЧИТЬ ПО
		             |	КомандыПользователей.chat_id УБЫВ";
		запрос.УстановитьПараметр("client_id",РСЗ.client_id);
		выборка = запрос.Выполнить().Выбрать();
		Если выборка.Следующий() тогда
			РСЗ.Команда = выборка.Команда;
			РСЗ.next_id = выборка.next_id + 1;
			Если РСЗ.Команда = Справочники.КомандыБота.НайтиПоНаименованию("Старт") тогда
				РСЗ.next_id = 100;
			конецесли;	
		конецесли;	
	конецесли;
	Запрос = новый запрос;
	запрос.Текст = "ВЫБРАТЬ
	               |	КомандыБотаСписокВопросов.Ссылка КАК Ссылка,
	               |	КомандыБотаСписокВопросов.НомерСтроки КАК НомерСтроки,
	               |	КомандыБотаСписокВопросов.ТекстВопроса КАК ТекстВопроса,
	               |	КомандыБотаСписокВопросов.EN КАК EN
	               |ИЗ
	               |	Справочник.КомандыБота.СписокВопросов КАК КомандыБотаСписокВопросов
	               |ГДЕ
	               |	КомандыБотаСписокВопросов.Ссылка.Ссылка = &Ссылка";
	запрос.УстановитьПараметр("Ссылка",РСЗ.Команда);
	выгрузка = запрос.Выполнить().Выгрузить();
	
	Если  РСЗ.next_id = 100 тогда
		РСЗ.записать();
		Если Тележка.ПолучитьЯзык(РСЗ.client_id) = "EN" тогда
			ОтправитьВопросПользователю(РСЗ.client_id,"I don't understand you. Try /help to see list of commands");
		иначе	
			ОтправитьВопросПользователю(РСЗ.client_id,"Я вас не понимаю. Попробуйте ввести /help чтобы посмотреть список команд");
		конецесли;
	иначеЕсли РСЗ.next_id >= выгрузка.Количество() тогда
		Если РСЗ.Команда = Справочники.КомандыБота.НайтиПоНаименованию("Получить заказы") тогда
			ПолучитьСписокЗаказов(РСЗ);
			РСЗ.записать();
		иначеесли РСЗ.Команда = Справочники.КомандыБота.НайтиПоНаименованию("Взять заказ") тогда
			ВзятьЗаказ(РСЗ);
			РСЗ.записать();
		иначеесли РСЗ.Команда = Справочники.КомандыБота.НайтиПоНаименованию("Закрыть заказ") тогда
			ЗакрытьЗаказ(РСЗ);
			РСЗ.записать();	
		иначеесли РСЗ.Команда = Справочники.КомандыБота.НайтиПоНаименованию("Отменить заказ") тогда
			ОтменитьЗаказ(РСЗ);
			РСЗ.записать();
		иначеесли РСЗ.Команда = Справочники.КомандыБота.НайтиПоНаименованию("Жалоба") тогда
			СформироватьЖалобу(РСЗ);
			РСЗ.записать();	
		иначеесли РСЗ.Команда = Справочники.КомандыБота.НайтиПоНаименованию("Мой Список Заказов") тогда
			ВывестиСписокЗаказов(РСЗ);
			РСЗ.записать();
		иначеесли РСЗ.Команда = Справочники.КомандыБота.НайтиПоНаименованию("Сменить язык") тогда
			ТекстВопроса = "Choose language&reply_markup={""inline_keyboard"":[[{""text"": ""English"",""callback_data"": ""\/Eng""},{""text"": ""Russian"",""callback_data"": ""\/Ru""}]]}";
			ОтправитьВопросПользователю(РСЗ.client_id,ТекстВопроса);
			РСЗ.записать();
		иначеесли РСЗ.Команда = Справочники.КомандыБота.НайтиПоНаименованию("English") тогда
			ТекстВопроса = "Current language is english now";
			ОтправитьВопросПользователю(РСЗ.client_id,ТекстВопроса);
			РСЗ.записать();
			РСЛ = РегистрыСведений.ЯзыкПользователя.СоздатьМенеджерЗаписи();
			РСЛ.client_id = РСЗ.client_id;
			РСЛ.Язык = "EN";			
			РСЛ.Записать();
		иначеесли РСЗ.Команда = Справочники.КомандыБота.НайтиПоНаименованию("Russian") тогда
			ТекстВопроса = "Язык интерфейса теперь русский";
			ОтправитьВопросПользователю(РСЗ.client_id,ТекстВопроса);
			РСЗ.записать();
			РСЛ = РегистрыСведений.ЯзыкПользователя.СоздатьМенеджерЗаписи();
			РСЛ.client_id = РСЗ.client_id;
			РСЛ.Язык = "RU";			
			РСЛ.Записать();
		иначе
			РСЗ.записать();
			Справочники.КомандыБота.ОбработатьКоманду(РСЗ.Команда, РСЗ.chat_id, РСЗ.client_id);
		конецесли;
	иначе
		Если РСЗ.Команда = Справочники.КомандыБота.НайтиПоНаименованию("Создать заказ") и РСЗ.next_id = 0 тогда
			ОбработатьСозданиеЗаказа(РСЗ,выгрузка);	
		иначеЕсли РСЗ.Команда = Справочники.КомандыБота.НайтиПоНаименованию("Регистрация Клиента") и РСЗ.next_id = 0 тогда
			ОбработатьСозданиеКлиента(РСЗ,выгрузка)
		иначеЕсли РСЗ.Команда = Справочники.КомандыБота.НайтиПоНаименованию("Регистрация курьера") и РСЗ.next_id = 0 тогда
			ОбработатьСозданиеКурьера(РСЗ,выгрузка)	
		иначе
			НайтиВопрос = выгрузка.Найти(РСЗ.next_id+1,"НомерСтроки");
			Если Тележка.ПолучитьЯзык(РСЗ.client_id) = "EN" тогда
				ОтправитьВопросПользователю(РСЗ.client_id,НайтиВопрос.EN);
			иначе
				ОтправитьВопросПользователю(РСЗ.client_id,НайтиВопрос.ТекстВопроса);
			конецесли;
		конецесли;	
		РСЗ.записать();	
	конецесли;
	
	
конецфункции

&НаСервере
Процедура СформироватьЖалобу(РСЗ)
	обДок = Документы.Жалоба.СоздатьДокумент();
	обДок.Дата = ТекущаяДата();
	обДок.Заказ = Документы.Заказ.НайтиПоНомеру(РСЗ.ТекстСообщения);
	обДок.Записать(РежимЗаписиДокумента.Проведение);
	Если Тележка.ПолучитьЯзык(РСЗ.client_id) = "EN" тогда
		ОтправитьВопросПользователю(РСЗ.client_id,"We are sorry. We will contact to you soon");
	иначе	
		ОтправитьВопросПользователю(РСЗ.client_id,"Мы сожалеем, что подвели вас. Наш менеджер свяжется с вами с ближайшее время");
	конецесли;
конецпроцедуры	

&НаСервере
Процедура ВывестиСписокЗаказов(РСЗ)
	Заказчик = ВывестиСписокЗаказовЗаказчика(РСЗ);
	ВывестиСписокЗаказовКурьера(РСЗ,заказчик)
КонецПроцедуры	

&НаСервере
Функция ВывестиСписокЗаказовЗаказчика(РСЗ)
	Заказчик = ложь;
	РСЗ.next_id = 99;
	Клиент = ПоискКлиента(РСЗ.client_id);
	Если НЕ ЗначениеЗаполнено(Клиент) тогда
		кКурьер = ПоискКурьера(РСЗ.client_id);
		Если НЕ ЗначениеЗаполнено(кКурьер) тогда
			Если Тележка.ПолучитьЯзык(РСЗ.client_id) = "EN" тогда
				ОтправитьВопросПользователю(РСЗ.client_id,"You are not registred as client yet. Please register. /regcl");
			иначе
				ОтправитьВопросПользователю(РСЗ.client_id,"Вы ещё не зарегестрированы в качестве клиента. Пройдите регистрацию /regcl");
			конецесли;
		конецесли;
	иначе
		Заказчик = истина;
		РезультатЗапрос = ЗапросПоЗаказамЗаказчика(Клиент);
		Если РезультатЗапрос.Пустой() тогда
			Если Тележка.ПолучитьЯзык(РСЗ.client_id) = "EN" тогда
				ОтправитьВопросПользователю(РСЗ.client_id,"You have no orders a customer");
			иначе
				ОтправитьВопросПользователю(РСЗ.client_id,"У вас нет заказов в качестве заказчика");
			конецесли;
		иначе
			Если Тележка.ПолучитьЯзык(РСЗ.client_id) = "EN" тогда
				ОтправитьВопросПользователю(РСЗ.client_id,"Your orders in work as a customer:");
			иначе
				ОтправитьВопросПользователю(РСЗ.client_id,"Ваши заказы в работе в качеcтве заказчика:");
			конецесли;
			выборка = РезультатЗапрос.Выбрать();
			Пока выборка.Следующий() цикл
				Если Тележка.ПолучитьЯзык(РСЗ.client_id) = "EN" тогда
					ТекстСообщения = "Order №" + выборка.Номер + " Client: " + выборка.Клиент.Наименование +
					Символы.ПС + "Order status: " + выборка.Статус + 
					Символы.ПС + "Shipping address: " + выборка.АдресОтправки + Символы.ПС + 
					"Delivery address: " + выборка.АдресДоставки + Символы.ПС;
					Если выборка.статус = Перечисления.СтатусыЗаказов.Принят тогда
						КлавиатураВСообщении = "{""inline_keyboard"":[[{""text"": ""Refuse an order"",""callback_data"": ""\/denyorder" + выборка.Номер + """}]]}";
						ТекстСообщения = ТекстСообщения + "&reply_markup=" + КлавиатураВСообщении;
					конецесли;					
				иначе
					ТекстСообщения = "Заказ №" + выборка.Номер + " Клиент: " + выборка.Клиент.Наименование +
					Символы.ПС + "Статус заказа: " + выборка.Статус + 
					Символы.ПС + "Адрес отправки: " + выборка.АдресОтправки + Символы.ПС + 
					"Адрес доставки: " + выборка.АдресДоставки + Символы.ПС;
					Если выборка.статус = Перечисления.СтатусыЗаказов.Принят тогда
						КлавиатураВСообщении = "{""inline_keyboard"":[[{""text"": ""Отказаться от заказа"",""callback_data"": ""\/denyorder" + выборка.Номер + """}]]}";
						ТекстСообщения = ТекстСообщения + "&reply_markup=" + КлавиатураВСообщении;
					конецесли;
				конецесли;
				ОтправитьВопросПользователю(РСЗ.client_id,ТекстСообщения);
			конецЦикла;	
		конецесли;		
	конецесли;
	возврат заказчик
конецфункции	

&НаСервере
Процедура ВывестиСписокЗаказовКурьера(РСЗ,заказчик)
	РСЗ.next_id = 99;
	Курьер = ПоискКурьера(РСЗ.client_id);
	Если НЕ ЗначениеЗаполнено(Курьер) тогда 		
		Если НЕ Заказчик тогда
			Если Тележка.ПолучитьЯзык(РСЗ.client_id) = "EN" тогда
				ОтправитьВопросПользователю(РСЗ.client_id,"You are not registered as a courier yet. Please register. /regcur");
			иначе
				ОтправитьВопросПользователю(РСЗ.client_id,"Вы ещё не зарегестрированы в качестве курьера. Пройдите регистрацию /regcur");
			конецесли;
		Конецесли;
	иначе
		РезультатЗапрос = ЗапросПоПринятымЗаказам(Курьер);
		Если РезультатЗапрос.Пустой() тогда
			Если Тележка.ПолучитьЯзык(РСЗ.client_id) = "EN" тогда
				ОтправитьВопросПользователю(РСЗ.client_id,"You have no orders a courier");
			иначе
				ОтправитьВопросПользователю(РСЗ.client_id,"У вас нет заказов в качестве курьера");
			конецесли;
		иначе
			Если Тележка.ПолучитьЯзык(РСЗ.client_id) = "EN" тогда
				ОтправитьВопросПользователю(РСЗ.client_id,"Your orders in work as a customer:");
			иначе
				ОтправитьВопросПользователю(РСЗ.client_id,"Ваши заказы в работе в качестве курьера:");
			конецесли;
			выборка = РезультатЗапрос.Выбрать();
			Пока выборка.Следующий() цикл
				Если Тележка.ПолучитьЯзык(РСЗ.client_id) = "EN" тогда
					ТекстСообщения = "Order №" + выборка.Номер + " Client: " + выборка.Клиент.Наименование + 
					Символы.ПС + "Shipping address: " + выборка.АдресОтправки + Символы.ПС + 
					"Адрес доставки: " + выборка.АдресДоставки;
					КлавиатураВСообщении = "{""inline_keyboard"":[[{""text"": ""Finish order"",""callback_data"": ""\/closeorder" + выборка.Номер + """}]]}";
					ТекстСообщения = ТекстСообщения + "&reply_markup=" + КлавиатураВСообщении;
				иначе
					ТекстСообщения = "Заказ №" + выборка.Номер + " Клиент: " + выборка.Клиент.Наименование + 
					Символы.ПС + "Адрес отправки: " + выборка.АдресОтправки + Символы.ПС + 
					"Delivery address: " + выборка.АдресДоставки;
					КлавиатураВСообщении = "{""inline_keyboard"":[[{""text"": ""Завершить заказ"",""callback_data"": ""\/closeorder" + выборка.Номер + """}]]}";
					ТекстСообщения = ТекстСообщения + "&reply_markup=" + КлавиатураВСообщении;
				конецесли;
				ОтправитьВопросПользователю(РСЗ.client_id,ТекстСообщения);
			конецЦикла;	
		конецесли;		
	конецесли;
конецпроцедуры	

&НаСервере
Функция ЗапросПоПринятымЗаказам(Курьер)
	запрос = новый запрос;
	запрос.Текст = "ВЫБРАТЬ
	               |	Заказ.Ссылка КАК Ссылка,
	               |	Заказ.ВерсияДанных КАК ВерсияДанных,
	               |	Заказ.ПометкаУдаления КАК ПометкаУдаления,
	               |	Заказ.Номер КАК Номер,
	               |	Заказ.Дата КАК Дата,
	               |	Заказ.Проведен КАК Проведен,
	               |	Заказ.Клиент КАК Клиент,
	               |	Заказ.Курьер КАК Курьер,
	               |	Заказ.Статус КАК Статус,
	               |	Заказ.Зона КАК Зона,
	               |	Заказ.ДополнительнаяИнформация КАК ДополнительнаяИнформация,
	               |	Заказ.ДатаПриемаВРаботу КАК ДатаПриемаВРаботу,
	               |	Заказ.ДатаНазначения КАК ДатаНазначения,
	               |	Заказ.ДатаЗавершения КАК ДатаЗавершения,
	               |	Заказ.Оценка КАК Оценка,
	               |	Заказ.СпособОплаты КАК СпособОплаты,
	               |	Заказ.Сумма КАК Сумма,
	               |	Заказ.Оплачен КАК Оплачен,
	               |	Заказ.АдресДоставки КАК АдресДоставки,
	               |	Заказ.АдресОтправки КАК АдресОтправки
	               |ИЗ
	               |	Документ.Заказ КАК Заказ
	               |ГДЕ
	               |	НЕ Заказ.Статус В(&Статусы)
	               |	И Заказ.Проведен
	               |	И Заказ.Курьер = &Курьер";
	Статусы = новый СписокЗначений;
	Статусы.Добавить(Перечисления.СтатусыЗаказов.Принят);
	Статусы.Добавить(Перечисления.СтатусыЗаказов.Завершен);
	Статусы.Добавить(Перечисления.СтатусыЗаказов.Отменен);
	запрос.УстановитьПараметр("Статусы",Статусы);
	запрос.УстановитьПараметр("Курьер",Курьер);
	возврат запрос.Выполнить();
	
конецфункции

&НаСервере
Функция ЗапросПоЗаказамЗаказчика(Клиент)
	запрос = новый запрос;
	запрос.Текст = "ВЫБРАТЬ
	               |	Заказ.Ссылка КАК Ссылка,
	               |	Заказ.ВерсияДанных КАК ВерсияДанных,
	               |	Заказ.ПометкаУдаления КАК ПометкаУдаления,
	               |	Заказ.Номер КАК Номер,
	               |	Заказ.Дата КАК Дата,
	               |	Заказ.Проведен КАК Проведен,
	               |	Заказ.Клиент КАК Клиент,
	               |	Заказ.Курьер КАК Курьер,
	               |	Заказ.Статус КАК Статус,
	               |	Заказ.Зона КАК Зона,
	               |	Заказ.ДополнительнаяИнформация КАК ДополнительнаяИнформация,
	               |	Заказ.ДатаПриемаВРаботу КАК ДатаПриемаВРаботу,
	               |	Заказ.ДатаНазначения КАК ДатаНазначения,
	               |	Заказ.ДатаЗавершения КАК ДатаЗавершения,
	               |	Заказ.Оценка КАК Оценка,
	               |	Заказ.СпособОплаты КАК СпособОплаты,
	               |	Заказ.Сумма КАК Сумма,
	               |	Заказ.Оплачен КАК Оплачен,
	               |	Заказ.АдресДоставки КАК АдресДоставки,
	               |	Заказ.АдресОтправки КАК АдресОтправки
	               |ИЗ
	               |	Документ.Заказ КАК Заказ
	               |ГДЕ
	               |	НЕ Заказ.Статус В (&Статусы)
	               |	И Заказ.Проведен
	               |	И Заказ.Клиент = &Клиент";
	Статусы = новый СписокЗначений;
	Статусы.Добавить(Перечисления.СтатусыЗаказов.Завершен);
	Статусы.Добавить(Перечисления.СтатусыЗаказов.Отменен);
	запрос.УстановитьПараметр("Статусы",Статусы);
	запрос.УстановитьПараметр("Клиент",Клиент);
	возврат запрос.Выполнить();
	
конецфункции


&НаСервере
Функция ЗапросПоДоступнымЗаказам()
	запрос = новый запрос;
	запрос.Текст = "ВЫБРАТЬ
	               |	Заказ.Ссылка КАК Ссылка,
	               |	Заказ.ВерсияДанных КАК ВерсияДанных,
	               |	Заказ.ПометкаУдаления КАК ПометкаУдаления,
	               |	Заказ.Номер КАК Номер,
	               |	Заказ.Дата КАК Дата,
	               |	Заказ.Проведен КАК Проведен,
	               |	Заказ.Клиент КАК Клиент,
	               |	Заказ.Курьер КАК Курьер,
	               |	Заказ.Статус КАК Статус,
	               |	Заказ.Зона КАК Зона,
	               |	Заказ.ДополнительнаяИнформация КАК ДополнительнаяИнформация,
	               |	Заказ.ДатаПриемаВРаботу КАК ДатаПриемаВРаботу,
	               |	Заказ.ДатаНазначения КАК ДатаНазначения,
	               |	Заказ.ДатаЗавершения КАК ДатаЗавершения,
	               |	Заказ.Оценка КАК Оценка,
	               |	Заказ.СпособОплаты КАК СпособОплаты,
	               |	Заказ.Сумма КАК Сумма,
	               |	Заказ.Оплачен КАК Оплачен,
	               |	Заказ.АдресДоставки КАК АдресДоставки,
	               |	Заказ.АдресОтправки КАК АдресОтправки
	               |ИЗ
	               |	Документ.Заказ КАК Заказ
	               |ГДЕ
	               |	Заказ.Статус = &Статус
	               |	И Заказ.Проведен
	               |	И Заказ.Курьер = &Курьер";
	запрос.УстановитьПараметр("Статус",Перечисления.СтатусыЗаказов.Принят);
	запрос.УстановитьПараметр("Курьер",Справочники.Курьеры.ПустаяСсылка());
	возврат запрос.Выполнить();
	
конецфункции	

&НаСервере
Процедура ВзятьЗаказ(РСЗ)
	РСЗ.next_id = 99;
	Курьер = ПоискКурьера(РСЗ.client_id);
	Если НЕ ЗначениеЗаполнено(Курьер) тогда 
		Если Тележка.ПолучитьЯзык(РСЗ.client_id) = "EN" тогда 
			ОтправитьВопросПользователю(РСЗ.client_id,"You are not registered as a courier yet. Please register. /regcur");
		иначе 			
			ОтправитьВопросПользователю(РСЗ.client_id,"Вы ещё не зарегестрированы в качестве курьера. Пройдите регистрацию /regcur");
		конецесли;
	иначе
		РезультатЗапрос = ЗапросПоДоступнымЗаказам();
		выгрузка = РезультатЗапрос.выгрузить();
		ДоступныйЗаказ = выгрузка.Найти(РСЗ.ТекстСообщения,"Номер");
		Если ЗначениеЗаполнено(ДоступныйЗаказ) тогда
			ЗакОб = ДоступныйЗаказ.Ссылка.ПолучитьОбъект();
			ЗакОб.Курьер = Курьер;
			ЗакОб.Статус = Перечисления.СтатусыЗаказов.ВРаботе;
			ЗакОб.Записать(РежимЗаписиДокумента.Проведение);
		иначе
			Если Тележка.ПолучитьЯзык(РСЗ.client_id) = "EN" тогда
				ОтправитьВопросПользователю(РСЗ.client_id,"Order not found or does not exist");
			иначе
				ОтправитьВопросПользователю(РСЗ.client_id,"Заказ не найден или не существует");
			конецесли;
		конецесли;	
	конецесли;
конецпроцедуры

&НаСервере
Процедура ЗакрытьЗаказ(РСЗ);
	РСЗ.next_id = 99;
	Курьер = ПоискКурьера(РСЗ.client_id);
	Если НЕ ЗначениеЗаполнено(Курьер) тогда
		Если Тележка.ПолучитьЯзык(РСЗ.client_id) = "EN" тогда
			ОтправитьВопросПользователю(РСЗ.client_id,"You are not registered as a courier yet. Please register. /regcur");
		иначе
			ОтправитьВопросПользователю(РСЗ.client_id,"Вы ещё не зарегестрированы в качестве курьера. Пройдите регистрацию /regcur");
		конецесли;
	иначе
		РезультатЗапрос = ЗапросПоПринятымЗаказам(Курьер);
		выгрузка = РезультатЗапрос.выгрузить();
		ДоступныйЗаказ = выгрузка.Найти(РСЗ.ТекстСообщения,"Номер");
		Если ЗначениеЗаполнено(ДоступныйЗаказ) тогда
			ЗакОб = ДоступныйЗаказ.Ссылка.ПолучитьОбъект();
			ЗакОб.Статус = Перечисления.СтатусыЗаказов.Завершен;
			ЗакОб.Записать(РежимЗаписиДокумента.Проведение);
		иначе
			Если Тележка.ПолучитьЯзык(РСЗ.client_id) = "EN" тогда
				ОтправитьВопросПользователю(РСЗ.client_id,"Order not found or does not exist");
			иначе
				ОтправитьВопросПользователю(РСЗ.client_id,"Заказ не найден или не существует");
			конецесли;
		конецесли;	
	конецесли;
конецпроцедуры 

&НаСервере
Процедура ОтменитьЗаказ(РСЗ);
	РСЗ.next_id = 99;
	Клиент = ПоискКлиента(РСЗ.client_id);
	Если НЕ ЗначениеЗаполнено(Клиент) тогда
		Если Тележка.ПолучитьЯзык(РСЗ.client_id) = "EN" тогда
			ОтправитьВопросПользователю(РСЗ.client_id,"You are not registred as client yet. Please register. /regcl");
		иначе
			ОтправитьВопросПользователю(РСЗ.client_id,"Вы ещё не зарегестрированы в качестве клиента. Пройдите регистрацию /regcl");
		конецесли;
	иначе
		РезультатЗапрос = ЗапросПоЗаказамЗаказчика(Клиент);
		выгрузка = РезультатЗапрос.выгрузить();
		ДоступныйЗаказ = выгрузка.Найти(РСЗ.ТекстСообщения,"Номер");
		Если ЗначениеЗаполнено(ДоступныйЗаказ) И ДоступныйЗаказ.Ссылка.Статус = Перечисления.СтатусыЗаказов.Принят тогда
			ЗакОб = ДоступныйЗаказ.Ссылка.ПолучитьОбъект();
			ЗакОб.Статус = Перечисления.СтатусыЗаказов.Отменен;
			ЗакОб.Записать(РежимЗаписиДокумента.Проведение);
		иначеесли ЗначениеЗаполнено(ДоступныйЗаказ) И ДоступныйЗаказ.Ссылка.Статус <> Перечисления.СтатусыЗаказов.Принят тогда
			Если Тележка.ПолучитьЯзык(РСЗ.client_id) = "EN" тогда
				ОтправитьВопросПользователю(РСЗ.client_id,"The order is already in work. Can't cancel/");
			иначе
				ОтправитьВопросПользователю(РСЗ.client_id,"Заказ уже в работе. Отмена не возможна");
			конецесли;
		иначе
			Если Тележка.ПолучитьЯзык(РСЗ.client_id) = "EN" тогда
				ОтправитьВопросПользователю(РСЗ.client_id,"Order not found or does not exist");
			иначе	
				ОтправитьВопросПользователю(РСЗ.client_id,"Заказ не найден или не существует");
			конецесли;
		конецесли;	
	конецесли;
конецпроцедуры 


&НаСервере
Процедура ПолучитьСписокЗаказов(РСЗ)
	РСЗ.next_id = 99;
	Курьер = ПоискКурьера(РСЗ.client_id);
	Если НЕ ЗначениеЗаполнено(Курьер) тогда
		Если Тележка.ПолучитьЯзык(РСЗ.client_id) = "EN" тогда
			ОтправитьВопросПользователю(РСЗ.client_id,"You are not registered as a courier yet. Please register. /regcur");
		иначе
			ОтправитьВопросПользователю(РСЗ.client_id,"Вы ещё не зарегестрированы в качестве курьера. Пройдите регистрацию /regcur");
		конецесли;
	иначе
		РезультатЗапрос = ЗапросПоДоступнымЗаказам();
		Если РезультатЗапрос.Пустой() тогда
			Если Тележка.ПолучитьЯзык(РСЗ.client_id) = "EN" тогда
				ОтправитьВопросПользователю(РСЗ.client_id,"No new orders");
			иначе
				ОтправитьВопросПользователю(РСЗ.client_id,"Нет новых заказов");
			конецесли;
		иначе
			Если Тележка.ПолучитьЯзык(РСЗ.client_id) = "EN" тогда
				ОтправитьВопросПользователю(РСЗ.client_id,"Select an order from the list:");
			иначе
				ОтправитьВопросПользователю(РСЗ.client_id,"Выберите заказ из списка:");
			конецесли;
			выборка = РезультатЗапрос.Выбрать();
			Пока выборка.Следующий() цикл
				Если Тележка.ПолучитьЯзык(РСЗ.client_id) = "EN" тогда
					ТекстСообщения = "Order №" + выборка.Номер + " Client: " + выборка.Клиент.Наименование + 
					Символы.ПС + "Shipping address: " + выборка.АдресОтправки + Символы.ПС + 
					"Delivery address: " + выборка.АдресДоставки;
					КлавиатураВСообщении = "{""inline_keyboard"":[[{""text"": ""Take order"",""callback_data"": ""\/takeorder" + выборка.Номер + """}]]}";
					ТекстСообщения = ТекстСообщения + "&reply_markup=" + КлавиатураВСообщении;
					ОтправитьВопросПользователю(РСЗ.client_id,ТекстСообщения);
				иначе
					ТекстСообщения = "Заказ №" + выборка.Номер + " Клиент: " + выборка.Клиент.Наименование + 
					Символы.ПС + "Адрес отправки: " + выборка.АдресОтправки + Символы.ПС + 
					"Адрес доставки: " + выборка.АдресДоставки;
					КлавиатураВСообщении = "{""inline_keyboard"":[[{""text"": ""Взять заказ"",""callback_data"": ""\/takeorder" + выборка.Номер + """}]]}";
					ТекстСообщения = ТекстСообщения + "&reply_markup=" + КлавиатураВСообщении;
					ОтправитьВопросПользователю(РСЗ.client_id,ТекстСообщения);
				конецесли;
			конецЦикла;	
		конецесли;		
	конецесли;	
конецпроцедуры	

&НаСервере
Процедура ОбработатьСозданиеЗаказа(РСЗ,выгрузка)
	Клиент = ПоискКлиента(РСЗ.client_id);
	Если НЕ ЗначениеЗаполнено(Клиент) тогда
		РСЗ.next_id = 99;
		Если Тележка.ПолучитьЯзык(РСЗ.client_id) = "EN" тогда
			ОтправитьВопросПользователю(РСЗ.client_id,"You are not registred as client yet. Please register. /regcl");
		иначе
			ОтправитьВопросПользователю(РСЗ.client_id,"Вы ещё не зарегестрированы в качестве клиента. Пройдите регистрацию /regcl");
		конецесли;
	иначе
		НайтиВопрос = выгрузка.Найти(РСЗ.next_id+1,"НомерСтроки");
		Если Тележка.ПолучитьЯзык(РСЗ.client_id) = "EN" тогда
			ОтправитьВопросПользователю(РСЗ.client_id,НайтиВопрос.EN);
		иначе
			ОтправитьВопросПользователю(РСЗ.client_id,НайтиВопрос.ТекстВопроса);
		конецесли;
	конецесли;
конецпроцедуры

&НаСервере
Процедура ОбработатьСозданиеКлиента(РСЗ,выгрузка)
	Клиент = ПоискКлиента(РСЗ.client_id);
	Если ЗначениеЗаполнено(Клиент) тогда
		РСЗ.next_id = 99;
		Если Тележка.ПолучитьЯзык(РСЗ.client_id) = "EN" тогда
			ОтправитьВопросПользователю(РСЗ.client_id,"Hello" + Клиент.Наименование + " You are already registered")
		иначе
			ОтправитьВопросПользователю(РСЗ.client_id,"Добрый день " + Клиент.Наименование + " Вы уже зарегестрированы")
		конецесли;
	иначе
		НайтиВопрос = выгрузка.Найти(РСЗ.next_id+1,"НомерСтроки");
		Если Тележка.ПолучитьЯзык(РСЗ.client_id) = "EN" тогда
			ОтправитьВопросПользователю(РСЗ.client_id,НайтиВопрос.EN);
		иначе
			ОтправитьВопросПользователю(РСЗ.client_id,НайтиВопрос.ТекстВопроса);
		конецесли;				
	конецесли;		
конецпроцедуры

&НаСервере
Процедура ОбработатьСозданиеКурьера(РСЗ,выгрузка)
	Курьер = ПоискКурьера(РСЗ.client_id);
	Если ЗначениеЗаполнено(Курьер) тогда
		РСЗ.next_id = 99;
		Если Тележка.ПолучитьЯзык(РСЗ.client_id) = "EN" тогда
			ОтправитьВопросПользователю(РСЗ.client_id,"Hello " + Курьер.Наименование + " You are already registered as a courier")
		иначе
			ОтправитьВопросПользователю(РСЗ.client_id,"Добрый день " + Курьер.Наименование + " Вы уже зарегестрированы в качестве курьера");
		конецесли;
	иначе
		НайтиВопрос = выгрузка.Найти(РСЗ.next_id+1,"НомерСтроки");
		Если Тележка.ПолучитьЯзык(РСЗ.client_id) = "EN" тогда
			ОтправитьВопросПользователю(РСЗ.client_id,НайтиВопрос.EN);
		иначе
			ОтправитьВопросПользователю(РСЗ.client_id,НайтиВопрос.ТекстВопроса);
		конецесли;				
	конецесли;		
конецпроцедуры	

&НаСервере
Функция ПоискКлиента(client_id)
	запрос = новый запрос;
	запрос.Текст = "ВЫБРАТЬ
	               |	Клиенты.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.Клиенты КАК Клиенты
	               |ГДЕ
	               |	Клиенты.client_id = &client_id";
	запрос.УстановитьПараметр("client_id",client_id);
	выборка = запрос.Выполнить().Выбрать();
	Если выборка.Следующий() тогда
		возврат выборка.ссылка
	иначе
		возврат неопределено
	конецесли;	
КонецФункции

&НаСервере
Функция ПоискКурьера(client_id)
	запрос = новый запрос;
	запрос.Текст = "ВЫБРАТЬ
	               |	Курьеры.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.Курьеры КАК Курьеры
	               |ГДЕ
	               |	Курьеры.client_id = &client_id";
	запрос.УстановитьПараметр("client_id",client_id);
	выборка = запрос.Выполнить().Выбрать();
	Если выборка.Следующий() тогда
		возврат выборка.ссылка
	иначе
		возврат неопределено
	конецесли;	
КонецФункции

&НаСервере
Процедура ОтправитьВопросПользователю(client_id,ТекстВопроса,кнопка = неопределено)
	Ресурс = "bot" + ПолучитьТокенБота() + "/sendMessage?chat_id=" + СтрЗаменить(Формат(client_id, "ЧДЦ=; ЧС=; ЧРГ=."), ".", "") + "&text="+ТекстВопроса;
	
	Соединение  =  Новый HTTPСоединение(ПолучитьСерверТелеграм(),443,,,ПолучитьПрокси(),10,Новый ЗащищенноеСоединениеOpenSSL());
	Запрос = Новый HTTPЗапрос(Ресурс);
	Ответ = Соединение.Получить(Запрос); 
конецпроцедуры  

&НаСервере
Процедура СформироватьДерево(Дерево, СтрДерево, ЧтениеJSON, Знач ИмяКолонки = Неопределено)
	ЧтениеJSON.Прочитать();
	TипJSON = ЧтениеJSON.ТипТекущегоЗначения;
	Если TипJSON = ТипЗначенияJSON.НачалоОбъекта ИЛИ TипJSON = ТипЗначенияJSON.НачалоМассива Тогда
		НовСтр = СтрДерево.Строки.Добавить();
		СформироватьДерево(Дерево, НовСтр, ЧтениеJSON);
	ИначеЕсли TипJSON = ТипЗначенияJSON.ИмяСвойства Тогда
		СформироватьДерево(Дерево, СтрДерево, ЧтениеJSON, ЧтениеJSON.ТекущееЗначение);
	ИначеЕсли TипJSON = ТипЗначенияJSON.Число     ИЛИ TипJSON = ТипЗначенияJSON.Строка ИЛИ TипJSON = ТипЗначенияJSON.Булево  ИЛИ TипJSON = ТипЗначенияJSON.Null  Тогда 
		Если Дерево.Колонки.Найти(ИмяКолонки) = Неопределено Тогда
			Дерево.Колонки.Добавить(ИмяКолонки);
		КонецЕсли;
		СтрДерево[ИмяКолонки] = ЧтениеJSON.ТекущееЗначение;
		СформироватьДерево(Дерево, СтрДерево, ЧтениеJSON);
	ИначеЕсли TипJSON = ТипЗначенияJSON.Комментарий Тогда
		Если Дерево.Колонки.Найти("Комментарий") = Неопределено Тогда
			Дерево.Колонки.Добавить("Комментарий");
		КонецЕсли;
		СтрДерево.Комментарий = ЧтениеJSON.ТекущееЗначение;
		СформироватьДерево(Дерево, СтрДерево, ЧтениеJSON);
	ИначеЕсли СтрДерево <> Неопределено Тогда
		СформироватьДерево(Дерево, СтрДерево.Родитель, ЧтениеJSON);
	КонецЕсли;
КонецПроцедуры



&НаКлиенте
Процедура ПолучитьСообщения(Команда)
	
	Если ПолучитьАвтомат() тогда
		ПодключитьОбработчикОжидания("Автомат",5);
	иначе
		ПолучитьСообщенияНаСервере();  
	Конецесли;
КонецПроцедуры

&НаСервере
Функция ПолучитьАвтомат()
	возврат Константы.Автомат.Получить()
конецфункции	

&НаКлиенте
Процедура Автомат()
	
	ПолучитьСообщенияНаСервере();
	
КонецПроцедуры
